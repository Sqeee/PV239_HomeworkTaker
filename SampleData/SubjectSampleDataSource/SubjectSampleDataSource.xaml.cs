//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Blend.SampleData.SubjectSampleDataSource
{
    using System; 
    using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
    internal class SubjectSampleDataSource { }
#else

    public class SubjectSampleDataSource : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        public SubjectSampleDataSource()
        {
            try
            {
                Uri resourceUri = new Uri("ms-appx:/SampleData/SubjectSampleDataSource/SubjectSampleDataSource.xaml", UriKind.RelativeOrAbsolute);
                Windows.UI.Xaml.Application.LoadComponent(this, resourceUri);
            }
            catch
            {
            }
        }

        private Subject _Subject = new Subject();

        public Subject Subject
        {
            get
            {
                return this._Subject;
            }
        }
    }

    public class SubjectItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _Title = string.Empty;

        public string Title
        {
            get
            {
                return this._Title;
            }

            set
            {
                if (this._Title != value)
                {
                    this._Title = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }

        private string _TimeStart = string.Empty;

        public string TimeStart
        {
            get
            {
                return this._TimeStart;
            }

            set
            {
                if (this._TimeStart != value)
                {
                    this._TimeStart = value;
                    this.OnPropertyChanged("TimeStart");
                }
            }
        }

        private string _TimeEnd = string.Empty;

        public string TimeEnd
        {
            get
            {
                return this._TimeEnd;
            }

            set
            {
                if (this._TimeEnd != value)
                {
                    this._TimeEnd = value;
                    this.OnPropertyChanged("TimeEnd");
                }
            }
        }

        private string _Description = string.Empty;

        public string Description
        {
            get
            {
                return this._Description;
            }

            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    public class Subject : System.Collections.ObjectModel.ObservableCollection<SubjectItem>
    { 
    }
#endif
}
